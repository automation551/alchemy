====
TODO
====

Confirmed
==========

local_settings.py
-----------------

Gestione 'corretta' del local_settings.py (con la possibilità di fire un override delle variabili definite in settings.py). Vedi libro di .... ?


Working
=======

Project
-------

 - new Project (nome migliore?) Model 

 - ogni utente ha la sua home/profilo.


Transfer owner
--------------

Aggiungere una o più relazioni con l'utente sul Transfer (opzionali).

::

	class Transfer(models.Model):

		...

		creator = models.ForeignKey(User, related_name = 'creator', help_text="Utente che ha aggiornato l'oggetto")
		updater = models.ForeignKey(User, related_name = 'updater', help_text="Utente che ha aggiornato l'oggetto")


Transfer Template
-----------------

new model TransferTemplate::

 	class TransferTemplate(models.Model):

 		name = models.TextField(help_text="Nome del modello")
	    amount = models.DecimalField(max_digits = 10, decimal_places = 2)
	    source = models.ForeignKey(Account, related_name = 'source', help_text="Account da cui prelevare")
	    destination = models.ForeignKey(Account, related_name = 'destination', help_text="Account in cui depositare")

	    description = models.TextField(help_text="Descrizione del contenuto dell'operazione di trasferimento")
	    # validity_date = models.DateField(default=datetime.date.today, help_text="Data in cui il trasferimento è diventato effettivo. Ad esempio la valuta di un bonifico, o la data in cui hai acquistato il pane")

	    owner = models.ForeignKey(User, related_name = 'owner', help_text="Proprietario del modello")
	    
	    created_on = models.DateTimeField(auto_now_add = True)
	    updated_on = models.DateTimeField(auto_now = True)
